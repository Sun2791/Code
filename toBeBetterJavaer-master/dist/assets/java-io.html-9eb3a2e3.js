const n=JSON.parse('{"key":"v-30f46812","path":"/sidebar/csnotes/java-io.html","title":"","lang":"zh-CN","frontmatter":{"description":"一、概览 Java 的 I/O 大概可以分成以下几类： 磁盘操作：File 字节操作：InputStream 和 OutputStream 字符操作：Reader 和 Writer 对象操作：Serializable 网络操作：Socket 新的输入/输出：NIO 二、磁盘操作 File 类可以用于表示文件和目录的信息，但是它不表示文件的内容。 递归地列出一个目录下所有文件： public static void listAllFiles(File dir) { if (dir == null || !dir.exists()) { return; } if (dir.isFile()) { System.out.println(dir.getName()); return; } for (File file : dir.listFiles()) { listAllFiles(file); } }","head":[["meta",{"property":"og:url","content":"https://javabetter.cn/sidebar/csnotes/java-io.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:description","content":"一、概览 Java 的 I/O 大概可以分成以下几类： 磁盘操作：File 字节操作：InputStream 和 OutputStream 字符操作：Reader 和 Writer 对象操作：Serializable 网络操作：Socket 新的输入/输出：NIO 二、磁盘操作 File 类可以用于表示文件和目录的信息，但是它不表示文件的内容。 递归地列出一个目录下所有文件： public static void listAllFiles(File dir) { if (dir == null || !dir.exists()) { return; } if (dir.isFile()) { System.out.println(dir.getName()); return; } for (File file : dir.listFiles()) { listAllFiles(file); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-06T10:14:58.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:modified_time","content":"2024-06-06T10:14:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-06T10:14:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"一、概览","slug":"一、概览","link":"#一、概览","children":[]},{"level":2,"title":"二、磁盘操作","slug":"二、磁盘操作","link":"#二、磁盘操作","children":[]},{"level":2,"title":"三、字节操作","slug":"三、字节操作","link":"#三、字节操作","children":[{"level":3,"title":"实现文件复制","slug":"实现文件复制","link":"#实现文件复制","children":[]},{"level":3,"title":"装饰者模式","slug":"装饰者模式","link":"#装饰者模式","children":[]}]},{"level":2,"title":"四、字符操作","slug":"四、字符操作","link":"#四、字符操作","children":[{"level":3,"title":"编码与解码","slug":"编码与解码","link":"#编码与解码","children":[]},{"level":3,"title":"String 的编码方式","slug":"string-的编码方式","link":"#string-的编码方式","children":[]},{"level":3,"title":"Reader 与 Writer","slug":"reader-与-writer","link":"#reader-与-writer","children":[]},{"level":3,"title":"实现逐行输出文本文件的内容","slug":"实现逐行输出文本文件的内容","link":"#实现逐行输出文本文件的内容","children":[]}]},{"level":2,"title":"五、对象操作","slug":"五、对象操作","link":"#五、对象操作","children":[{"level":3,"title":"序列化","slug":"序列化","link":"#序列化","children":[]},{"level":3,"title":"Serializable","slug":"serializable","link":"#serializable","children":[]},{"level":3,"title":"transient","slug":"transient","link":"#transient","children":[]}]},{"level":2,"title":"六、网络操作","slug":"六、网络操作","link":"#六、网络操作","children":[{"level":3,"title":"InetAddress","slug":"inetaddress","link":"#inetaddress","children":[]},{"level":3,"title":"URL","slug":"url","link":"#url","children":[]},{"level":3,"title":"Sockets","slug":"sockets","link":"#sockets","children":[]},{"level":3,"title":"Datagram","slug":"datagram","link":"#datagram","children":[]}]},{"level":2,"title":"七、NIO","slug":"七、nio","link":"#七、nio","children":[{"level":3,"title":"流与块","slug":"流与块","link":"#流与块","children":[]},{"level":3,"title":"通道与缓冲区","slug":"通道与缓冲区","link":"#通道与缓冲区","children":[]},{"level":3,"title":"缓冲区状态变量","slug":"缓冲区状态变量","link":"#缓冲区状态变量","children":[]},{"level":3,"title":"文件 NIO 实例","slug":"文件-nio-实例","link":"#文件-nio-实例","children":[]},{"level":3,"title":"选择器","slug":"选择器","link":"#选择器","children":[]},{"level":3,"title":"套接字 NIO 实例","slug":"套接字-nio-实例","link":"#套接字-nio-实例","children":[]},{"level":3,"title":"内存映射文件","slug":"内存映射文件","link":"#内存映射文件","children":[]},{"level":3,"title":"对比","slug":"对比","link":"#对比","children":[]}]},{"level":2,"title":"八、参考资料","slug":"八、参考资料","link":"#八、参考资料","children":[]}],"git":{"createdTime":1717668898000,"updatedTime":1717668898000,"contributors":[{"name":"沉默王二","email":"www.qing_gee@163.com","commits":1}]},"readingTime":{"minutes":13.03,"words":3908},"filePathRelative":"sidebar/csnotes/java-io.md","localizedDate":"2024年6月6日","excerpt":"<h2> 一、概览</h2>\\n<p>Java 的 I/O 大概可以分成以下几类：</p>\\n<ul>\\n<li>磁盘操作：File</li>\\n<li>字节操作：InputStream 和 OutputStream</li>\\n<li>字符操作：Reader 和 Writer</li>\\n<li>对象操作：Serializable</li>\\n<li>网络操作：Socket</li>\\n<li>新的输入/输出：NIO</li>\\n</ul>\\n<h2> 二、磁盘操作</h2>\\n<p>File 类可以用于表示文件和目录的信息，但是它不表示文件的内容。</p>\\n<p>递归地列出一个目录下所有文件：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">listAllFiles</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">File</span> dir<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>dir <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">||</span> <span class=\\"token operator\\">!</span>dir<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">exists</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>dir<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isFile</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>dir<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">File</span> file <span class=\\"token operator\\">:</span> dir<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">listFiles</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token function\\">listAllFiles</span><span class=\\"token punctuation\\">(</span>file<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
