const e=JSON.parse('{"key":"v-45888dbe","path":"/sidebar/csnotes/java-vm.html","title":"","lang":"zh-CN","frontmatter":{"description":"本文大部分内容参考 周志明《深入理解 Java 虚拟机》 ，想要深入学习的话请看原书。 一、运行时数据区域 程序计数器 记录正在执行的虚拟机字节码指令的地址（如果正在执行的是本地方法则为空）。","head":[["meta",{"property":"og:url","content":"https://javabetter.cn/sidebar/csnotes/java-vm.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:description","content":"本文大部分内容参考 周志明《深入理解 Java 虚拟机》 ，想要深入学习的话请看原书。 一、运行时数据区域 程序计数器 记录正在执行的虚拟机字节码指令的地址（如果正在执行的是本地方法则为空）。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-06T10:14:58.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:modified_time","content":"2024-06-06T10:14:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-06T10:14:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"一、运行时数据区域","slug":"一、运行时数据区域","link":"#一、运行时数据区域","children":[{"level":3,"title":"程序计数器","slug":"程序计数器","link":"#程序计数器","children":[]},{"level":3,"title":"Java 虚拟机栈","slug":"java-虚拟机栈","link":"#java-虚拟机栈","children":[]},{"level":3,"title":"本地方法栈","slug":"本地方法栈","link":"#本地方法栈","children":[]},{"level":3,"title":"堆","slug":"堆","link":"#堆","children":[]},{"level":3,"title":"方法区","slug":"方法区","link":"#方法区","children":[]},{"level":3,"title":"运行时常量池","slug":"运行时常量池","link":"#运行时常量池","children":[]},{"level":3,"title":"直接内存","slug":"直接内存","link":"#直接内存","children":[]}]},{"level":2,"title":"二、垃圾收集","slug":"二、垃圾收集","link":"#二、垃圾收集","children":[{"level":3,"title":"判断一个对象是否可被回收","slug":"判断一个对象是否可被回收","link":"#判断一个对象是否可被回收","children":[]},{"level":3,"title":"引用类型","slug":"引用类型","link":"#引用类型","children":[]},{"level":3,"title":"垃圾收集算法","slug":"垃圾收集算法","link":"#垃圾收集算法","children":[]},{"level":3,"title":"垃圾收集器","slug":"垃圾收集器","link":"#垃圾收集器","children":[]}]},{"level":2,"title":"三、内存分配与回收策略","slug":"三、内存分配与回收策略","link":"#三、内存分配与回收策略","children":[{"level":3,"title":"Minor GC 和 Full GC","slug":"minor-gc-和-full-gc","link":"#minor-gc-和-full-gc","children":[]},{"level":3,"title":"内存分配策略","slug":"内存分配策略","link":"#内存分配策略","children":[]},{"level":3,"title":"Full GC 的触发条件","slug":"full-gc-的触发条件","link":"#full-gc-的触发条件","children":[]}]},{"level":2,"title":"四、类加载机制","slug":"四、类加载机制","link":"#四、类加载机制","children":[{"level":3,"title":"类的生命周期","slug":"类的生命周期","link":"#类的生命周期","children":[]},{"level":3,"title":"类加载过程","slug":"类加载过程","link":"#类加载过程","children":[]},{"level":3,"title":"类初始化时机","slug":"类初始化时机","link":"#类初始化时机","children":[]},{"level":3,"title":"类与类加载器","slug":"类与类加载器","link":"#类与类加载器","children":[]},{"level":3,"title":"类加载器分类","slug":"类加载器分类","link":"#类加载器分类","children":[]},{"level":3,"title":"双亲委派模型","slug":"双亲委派模型","link":"#双亲委派模型","children":[]},{"level":3,"title":"自定义类加载器实现","slug":"自定义类加载器实现","link":"#自定义类加载器实现","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1717668898000,"updatedTime":1717668898000,"contributors":[{"name":"沉默王二","email":"www.qing_gee@163.com","commits":1}]},"readingTime":{"minutes":32.37,"words":9712},"filePathRelative":"sidebar/csnotes/java-vm.md","localizedDate":"2024年6月6日","excerpt":"<p>本文大部分内容参考   <strong>周志明《深入理解 Java 虚拟机》</strong>  ，想要深入学习的话请看原书。</p>\\n<h2> 一、运行时数据区域</h2>\\n<div align=\\"center\\"> <img src=\\"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/5778d113-8e13-4c53-b5bf-801e58080b97.png\\" width=\\"400px\\"> </div><br>\\n<h3> 程序计数器</h3>\\n<p>记录正在执行的虚拟机字节码指令的地址（如果正在执行的是本地方法则为空）。</p>","autoDesc":true}');export{e as data};
